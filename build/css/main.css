/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 1.4rem;
  color: #000;
  line-height: 1.6666;
  font-weight: 400;
  font-family: 'Montserrat', sans-serif;
}

* {
  box-sizing: border-box;
}

.visually-hidden {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.container {
  padding: 0 2rem;
  max-width: 134rem;
  max-width: calc( 134rem + 4rem);
  margin: auto;
}

h1,
h2,
h3 {
  font-weight: 400;
  line-height: 1.25em;
  letter-spacing: 0.015em;
}

h1:first-of-type,
h2:first-of-type,
h3:first-of-type {
  margin-top: 0;
}

h1,
.h1 {
  font-size: 2.4rem;
  margin: 0;
  margin-bottom: .5em;
  font-weight: 700;
}

@media (min-width: 20em) {
  h1,
  .h1 {
    font-size: calc(1.59091vw + 1.89091rem);
    font-size: -webkit-calc(1.59091vw + 1.89091rem);
  }
}

@media (min-width: 75em) {
  h1,
  .h1 {
    font-size: 3.8rem;
  }
}

h2,
.h2 {
  font-weight: 500;
  font-size: 2rem;
  margin-bottom: .5em;
}

h2--large,
.h2--large {
  text-align: center;
  font-size: 2.4rem;
  font-weight: 300;
  margin-bottom: 1.25em;
}

@media (min-width: 20em) {
  h2--large,
  .h2--large {
    font-size: calc(1.59091vw + 1.89091rem);
    font-size: -webkit-calc(1.59091vw + 1.89091rem);
  }
}

@media (min-width: 75em) {
  h2--large,
  .h2--large {
    font-size: 3.8rem;
  }
}

h3 {
  font-weight: 700;
  font-size: 1.5rem;
  margin-bottom: .5em;
  margin-top: .75em;
}

h4,
.h4 {
  font-weight: normal;
  font-size: 2.2rem;
  margin-bottom: .5em;
  line-height: 1em;
  letter-spacing: -.01em;
}

@media (min-width: 20em) {
  h4,
  .h4 {
    font-size: calc(0.90909vw + 1.90909rem);
    font-size: -webkit-calc(0.90909vw + 1.90909rem);
  }
}

@media (min-width: 75em) {
  h4,
  .h4 {
    font-size: 3rem;
  }
}

img {
  display: block;
  max-width: 100%;
}

img.align-center {
  margin: 1em auto;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

a {
  color: currentColor;
  text-decoration: none;
}

a:not([class]) {
  text-decoration: underline;
}

a:not([class]):hover {
  text-decoration: none;
}

main {
  padding-top: 7.5rem;
  min-height: 100vh;
  background-color: #f7f8f8;
}

main.empty {
  padding: 3rem 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
}

.clearfix:after,
.clearfix:before {
  content: "";
  display: table;
}

.clearfix:after {
  clear: both;
}

.show-on-focus {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.show-on-focus:focus {
  z-index: 9999;
  height: auto;
  left: auto;
  width: auto;
  position: relative;
}

.hidden {
  display: none;
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

.absolute-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.modal {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(13, 44, 84, 0.7);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  overflow: scroll;
}

.modal--hidden {
  display: none;
}

.description {
  font-style: italic;
  font-size: 1.3rem;
  color: #85929F;
}

@media (min-width: 35.5em) {
  .container {
    padding: 0 4%;
    max-width: 134rem;
    max-width: calc( 134rem + 8%);
    margin: auto;
  }
}

.header {
  color: #0D2C54;
  border-bottom: 0.1rem solid rgba(182, 205, 205, 0.5);
}

@media (max-width: 35.5em) {
  .header {
    color: #fff;
    background: #0D2C54;
  }
}

.header__container {
  height: 7rem;
  max-width: calc( 144rem + 4rem);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center;
}

.header__links {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  height: 100%;
}

.header__nav {
  margin-left: 2rem;
}

@media (max-width: 35.5em) {
  .header__nav {
    display: none;
  }
}

.header__logo {
  font-size: 2.4rem;
  margin-bottom: 0;
  font-weight: 400;
}

.header__logo a {
  text-decoration: none;
}

.header__logo--standalone {
  margin-bottom: 4rem;
}

.header__logo--standalone:after {
  display: none !important;
}

.header__logo:after {
  content: '';
  display: inline-block;
  width: .2rem;
  height: 2rem;
  background-color: #B6CDCD;
  vertical-align: -.2rem;
  margin-left: 2rem;
}

@media (max-width: 35.5em) {
  .header__logo:after {
    display: none;
  }
}

.header__user {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  position: relative;
}

.header__user__notice {
  position: relative;
  width: 1.7rem;
  height: 1.9rem;
  margin-right: 3rem;
  background-image: url(../img/bell.svg);
  display: inline-block;
  text-indent: -9999px;
}

.header__user__notice:after {
  text-indent: 0;
  content: attr(data-number);
  display: inline-block;
  position: absolute;
  top: -5px;
  right: -8px;
  font-size: .8rem;
  width: 1.4rem;
  height: 1.4rem;
  line-height: 1.4rem;
  text-align: center;
  background-color: #fd425a;
  color: #fff;
  border-radius: 50%;
}

.header__user__img {
  width: 2.4rem;
  height: 2.4rem;
  margin-right: 1rem;
  display: block;
  border-radius: 50%;
}

.header__user__profile {
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 35.5em) {
  .header__user__name {
    display: none;
  }
}

.header__user__name:after {
  content: '';
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-image: url(../img/user-arrow.svg);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  margin-left: .5rem;
}

.header__menu {
  box-shadow: 0 30px 40px 0 rgba(6, 21, 41, 0.12);
  position: absolute;
  right: 0;
  top: 4.9rem;
  padding: 3rem;
  background-color: #fff;
  min-width: 32rem;
  -ms-transform: translateY(20px);
      transform: translateY(20px);
  visibility: hidden;
  opacity: 0;
  transition: all .4s;
  z-index: 1;
}

@media (max-width: 35.5em) {
  .header__menu {
    background: #0D2C54;
    transition: visibility .4s, transform .4s;
    top: 4.7rem;
  }
}

.header__menu--visible {
  opacity: 1;
  visibility: visible;
  -ms-transform: translateY(0);
      transform: translateY(0);
}

@media (max-width: 35.5em) {
  .header__menu--visible {
    width: 100vw;
    right: -2rem;
  }
}

@media (max-width: 35.5em) {
  .header__menu__content--desktop {
    display: none;
  }
}

.header__menu__content--mobile {
  display: none;
}

@media (max-width: 35.5em) {
  .header__menu__content--mobile {
    display: block;
  }
}

.header__menu__heading {
  margin-bottom: 3rem;
}

.header__menu__nav {
  padding: 2.5rem 0;
  border-top: 0.1rem solid rgba(182, 205, 205, 0.5);
  border-bottom: 0.1rem solid rgba(182, 205, 205, 0.5);
}

.header__menu__nav-item:not(:last-child) {
  margin-bottom: .5rem;
}

.header__menu__nav-link {
  display: block;
  transition: color .3s;
}

.header__menu__nav-link:hover {
  color: #06B2DD;
}

.header__menu__logout {
  font-size: 1.4rem;
  font-weight: 700;
  margin-top: 3rem;
  display: block;
}

.header__menu__logout:before {
  content: '';
  display: inline-block;
  width: 1.5rem;
  height: 1.5rem;
  background-image: url(../img/logout.svg);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  margin-right: .5rem;
  vertical-align: sub;
}

@media (max-width: 35.5em) {
  .header__menu__logout:before {
    filter: grayscale(100%) brightness(8);
  }
}

.header__notifications {
  position: absolute;
  top: 7.1rem;
  z-index: 1;
  text-indent: 0;
  width: 46rem;
  max-width: 100%;
  right: 0;
  -ms-transform: translateY(20px);
      transform: translateY(20px);
  visibility: hidden;
  opacity: 0;
  transition: all .4s;
}

.header__notifications--visible {
  opacity: 1;
  visibility: visible;
  -ms-transform: translateY(0);
      transform: translateY(0);
}

.nav__link {
  display: block;
  font-size: 1.5rem;
  font-weight: 500;
  height: 7rem;
  line-height: 6.9rem;
}

.nav__link--active {
  border-bottom: 0.2rem solid #0D2C54;
}

input[type=text],
input[type=email],
input[type=password] {
  font-family: 'Montserrat', sans-serif;
  max-width: 28rem;
  width: 100%;
  padding: .75em 0;
  border: none;
  background-color: transparent;
  font-size: 1.6rem;
  border-bottom: 0.1rem solid rgba(255, 255, 255, 0.3);
  text-align: center;
  box-shadow: none;
  color: #B6CCCC;
}

input[type=text]::-webkit-input-placeholder, input[type=email]::-webkit-input-placeholder, input[type=password]::-webkit-input-placeholder {
  color: #B6CCCC;
  text-align: center;
}

input[type=text]:-moz-placeholder, input[type=email]:-moz-placeholder, input[type=password]:-moz-placeholder {
  color: #B6CCCC;
  text-align: center;
}

input[type=text]::-moz-placeholder, input[type=email]::-moz-placeholder, input[type=password]::-moz-placeholder {
  color: #B6CCCC;
  text-align: center;
}

input[type=text]:-ms-input-placeholder, input[type=email]:-ms-input-placeholder, input[type=password]:-ms-input-placeholder {
  color: #B6CCCC;
  text-align: center;
}

input[type=text].dark,
input[type=email].dark,
input[type=password].dark {
  border-color: #B6CCCC;
}

label {
  display: block;
  text-transform: uppercase;
  font-size: 1.3rem;
  color: #85929F;
  letter-spacing: .1em;
  text-align: center;
}

.input-animated {
  max-width: 32rem;
  height: 4.3rem;
  position: relative;
  margin: auto;
  margin-bottom: 3rem;
}

.input-animated__outer-wrap {
  margin-top: 6.5rem;
  margin-bottom: 6.5rem;
}

.input-animated__input {
  outline: none;
  padding: 0 !important;
  text-align: left !important;
  border-color: #B6CCCC !important;
  text-align: left;
  max-width: none !important;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  display: block;
  width: 100%;
  height: 100%;
  color: #0D2C54 !important;
  transition: border-color .3s;
}

.input-animated__input:focus {
  border-color: #0D2C54 !important;
}

.input-animated__input:focus + .input-animated__label,
.input-animated__input.input-animated__input--filled + label {
  -ms-transform-origin: 0% 50%;
      transform-origin: 0% 50%;
  transform: translate3d(0, -2.5rem, 0) scale3d(0.7, 0.7, 1) translateZ(1px);
}

.input-animated__label {
  line-height: 1.15;
  text-align: left;
  padding: .75em 0;
  width: 100%;
  height: 100%;
  display: inline-block;
  float: right;
  font-size: 1.6rem;
  color: #B6CCCC;
  text-transform: none;
  transition: all .3s;
}

.input-animated__icon {
  position: absolute;
  right: 0;
  top: calc(50% - 1.15rem);
  width: 2.3rem;
  height: 2.3rem;
  border: .1rem solid;
  border-radius: 50%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  display: none;
}

.input-animated__icon--correct-fade {
  border-color: #B6CCCC;
}

.input-animated__icon--correct {
  border-color: #68DE0C;
}

.input-animated__icon--error {
  border-color: #F53A53;
}

.btn {
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-align: center;
      align-items: center;
  font-size: 1.4rem;
  height: 3.6rem;
  border: 0.1rem solid #B6CCCC;
  border-radius: .3rem;
  padding: 0 1.8rem;
  cursor: pointer;
  color: #B6CCCC;
  background-color: transparent;
  font-weight: 400;
  transition: all .3s;
}

.btn--disabled {
  opacity: .5;
  cursor: default;
}

.btn--gradient {
  color: #fff;
  background-image: linear-gradient(-225deg, #06408E 0%, #1C78BF 100%);
  border-color: #0D2C54;
  border: none;
}

.btn--large {
  padding: 0 3.9rem;
  height: 5.8rem;
  font-size: 1.8rem;
}

.btn--dark {
  font-weight: 500;
  border: none;
  color: #fff;
  border-color: #1EC4EE;
  background-color: #1EC4EE;
}

.btn--dark-outline {
  color: #06B2DD;
  border-color: #06B2DD;
}

.btn--dark-outline.btn--checked {
  color: #B6CCCC;
  border-color: #B6CCCC;
}

.btn--dark-outline.btn--checked:before {
  margin-right: .5rem;
  content: '';
  width: 1rem;
  height: .7rem;
  background-image: url(../img/check-restored-task.svg);
}

.btn--dark-outline:hover {
  color: #fff;
  background-color: #06B2DD;
}

.btn-round {
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  min-width: 3rem;
  min-height: 3rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  border: 0.1rem solid #B6CCCC;
  cursor: pointer;
  transition: all .3s;
}

.btn-round svg {
  transition: stroke .3s;
  stroke: #B6CCCC;
}

.btn-round:hover {
  background-color: #1EC4EE;
  border-color: #1EC4EE;
}

.btn-round:hover svg {
  stroke: #fff;
}

.btn-round--decline svg {
  stroke: none;
  fill: #B6CCCC;
}

.btn-round--decline:hover {
  background-color: #1EC4EE;
  border-color: #1EC4EE;
}

.btn-round--decline:hover svg {
  stroke: none;
  fill: #fff;
}

.dashboard__list {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.dashboard__card {
  width: calc(99.9% * 1 - (30px - 30px * 1));
  margin-bottom: 4rem;
}

.dashboard__card:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}

.dashboard__card:last-child {
  margin-right: 0;
}

.dashboard__card:nth-child(NaNn) {
  margin-right: 0;
  float: right;
}

.dashboard__card:nth-child(NaNn + 1) {
  clear: both;
}

@media (min-width: 48em) {
  .dashboard__card {
    width: calc(99.9% * 1/2 - (4rem - 4rem * 1/2));
  }
  .dashboard__card:nth-child(1n) {
    float: left;
    margin-right: 4rem;
    clear: none;
  }
  .dashboard__card:last-child {
    margin-right: 0;
  }
  .dashboard__card:nth-child(2n) {
    margin-right: 0;
    float: right;
  }
  .dashboard__card:nth-child(2n + 1) {
    clear: both;
  }
}

@media (min-width: 64em) {
  .dashboard__card {
    width: calc(99.9% * 1/3 - (4rem - 4rem * 1/3));
  }
  .dashboard__card:nth-child(1n) {
    float: left;
    margin-right: 4rem;
    clear: none;
  }
  .dashboard__card:last-child {
    margin-right: 0;
  }
  .dashboard__card:nth-child(3n) {
    margin-right: 0;
    float: right;
  }
  .dashboard__card:nth-child(3n + 1) {
    clear: both;
  }
}

.card {
  background-image: linear-gradient(-225deg, #06408E 0%, #1C78BF 100%);
  color: #fff;
  border-radius: .3rem;
}

.card--empty {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  padding: 2rem 3rem;
  background: #fff;
  color: #06B2DD;
  font-size: 1.8rem;
  box-shadow: 0 30px 40px 0 rgba(6, 21, 41, 0.12);
}

.card--standalone {
  margin: auto !important;
  float: none !important;
  min-height: 24rem;
  width: 52rem;
  max-width: 100%;
}

.card__header {
  padding: 2.4rem 3rem;
  position: relative;
}

.card__header__bg {
  background-image: url(../img/code.jpg);
  background-repeat: no-repeat;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: .5;
}

.card__header__top {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: baseline;
      align-items: baseline;
  -ms-flex-pack: justify;
      justify-content: space-between;
}

.card__header__settings {
  width: 1.6rem;
  min-width: 1.6rem;
  height: 1.6rem;
  min-height: 1.6rem;
  margin-left: 1rem;
  background-image: url(../img/settings.svg);
  background-size: cover;
  background-repeat: no-repeat;
  text-indent: -99999px;
}

.card__header__title {
  margin-bottom: .25em;
}

.card__header__subtitle {
  color: #B6CCCC;
  margin-bottom: 0;
  font-weight: 400;
  position: relative;
}

.card__header__menu {
  position: absolute;
  z-index: 1;
  right: 2rem;
  top: 6rem;
  -ms-transform: translateY(20px);
      transform: translateY(20px);
  visibility: hidden;
  opacity: 0;
  transition: all .4s;
}

.card__header__menu--visible {
  opacity: 1;
  visibility: visible;
  -ms-transform: translateY(0);
      transform: translateY(0);
}

.card__header__menu:before {
  content: '';
  position: absolute;
  right: 1.25rem;
  top: -5px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #fff transparent;
}

.card__main {
  padding: 2rem 3rem;
}

.card__divider {
  margin: 0;
  border: none;
  border-bottom: 0.1rem solid rgba(255, 255, 255, 0.2);
}

.card__stats {
  margin-top: 2.5rem;
  display: -ms-flexbox;
  display: flex;
}

.card__stats__desc {
  font-size: 1.3rem;
  padding-right: 1em;
}

.card__stats__bar {
  -ms-flex: 1;
      flex: 1;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
}

.card__stats__bar:after {
  content: '';
  height: .1rem;
  background-color: rgba(255, 255, 255, 0.4);
  -ms-flex: 1;
      flex: 1;
}

.card__stats__percentage {
  border-radius: 10rem;
  border: 2px solid white;
  position: relative;
}

.card__stats__percentage:before {
  content: attr(data-percent);
  position: absolute;
  font-size: 1.2rem;
  top: -2.25rem;
  right: -1.5rem;
}

@media (min-width: 64em) {
  .card:not(:nth-child(3n+3)) .card__header__menu {
    right: 5rem;
    -ms-transform: translateY(20px) translateX(100%);
        transform: translateY(20px) translateX(100%);
  }
  .card:not(:nth-child(3n+3)) .card__header__menu--visible {
    -ms-transform: translateY(0) translateX(100%);
        transform: translateY(0) translateX(100%);
  }
  .card:not(:nth-child(3n+3)) .card__header__menu:before {
    right: auto;
    left: .75rem;
    top: -5px;
  }
}

.new-project {
  position: relative;
}

.new-project__close {
  display: block;
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 2rem;
  height: 2rem;
  text-indent: -9999px;
  background-image: url(../img/close-popup.svg);
  background-size: cover;
}

.new-project__header {
  background-image: linear-gradient(-225deg, #06408E 0%, #1C78BF 100%);
}

.new-project__heading {
  font-size: 3rem;
  font-weight: 300;
  color: #fff;
  text-align: center;
  margin-bottom: .75em;
}

@media (min-width: 20em) {
  .new-project__heading {
    font-size: calc(1.13636vw + 2.63636rem);
    font-size: -webkit-calc(1.13636vw + 2.63636rem);
  }
}

@media (min-width: 75em) {
  .new-project__heading {
    font-size: 4rem;
  }
}

.new-project__subheading {
  font-size: 2rem;
  margin-bottom: .5em;
  font-weight: 400;
  color: #0D2C54;
}

@media (min-width: 20em) {
  .new-project__subheading {
    font-size: calc(0.90909vw + 1.70909rem);
    font-size: -webkit-calc(0.90909vw + 1.70909rem);
  }
}

@media (min-width: 75em) {
  .new-project__subheading {
    font-size: 2.8rem;
  }
}

.new-project__main, .new-project__header {
  padding: 3rem 7.5% 2.5rem;
}

.new-project__input-wrap {
  max-width: 28rem;
  margin: auto;
}

.new-project__input-wrap:not(:last-of-type) {
  margin-bottom: 2rem;
}

.new-project__main {
  background-color: #fff;
  text-align: center;
}

.new-project__label {
  display: block;
  text-transform: uppercase;
  font-size: 1.3rem;
  color: #85929F;
  letter-spacing: .1em;
  text-align: center;
}

.new-project__link {
  color: #06B2DD;
  text-decoration: underline;
  display: block;
  margin-bottom: 3.5rem;
}

.new-project__link:hover {
  text-decoration: none;
}

.new-project__users {
  margin-top: 1.5rem;
  margin-bottom: 1rem;
}

.new-project__users__item {
  display: inline-block;
}

.new-project__users__item:not(:last-child) {
  margin-right: .75rem;
}

.new-project__users__checkbox:checked + .new-project__users__label:before {
  opacity: 1;
}

.new-project__users__checkbox:checked + .new-project__users__label:after {
  display: none !important;
}

.new-project__users__label {
  text-indent: -9999px;
  width: 3rem;
  height: 3rem;
  background-position: center;
  background-size: cover;
  position: relative;
  cursor: pointer;
}

.new-project__users__label:hover:after {
  opacity: 1;
}

.new-project__users__label:before, .new-project__users__label:after {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  border-radius: 50%;
  color: #fff;
  font-size: 1.75rem;
  text-indent: 0;
  font-weight: 600;
  line-height: 3rem;
  text-align: center;
  opacity: 0;
  transition: opacity .3s;
}

.new-project__users__label:before {
  content: '';
  background-image: url(../img/check-user.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-color: rgba(104, 223, 11, 0.7);
}

.new-project__users__label:after {
  content: '';
  background-image: url(../img/plus-add-user-popup.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-color: rgba(13, 44, 84, 0.5);
}

.new-project__settings {
  margin: 5rem 0;
}

.new-project__settings__wrap {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-line-pack: center;
      align-content: center;
}

.new-project__settings__radio:checked + .new-project__settings__label {
  color: #fff;
  background-image: linear-gradient(-225deg, #06408E 0%, #1C78BF 100%);
  border-color: #0D2C54;
  border: none;
}

.new-project__settings__radio:checked + .new-project__settings__label .new-project__settings__icon {
  stroke: #fff;
}

.new-project__settings__radio:checked + .new-project__settings__label .new-project__settings__icon--fill {
  fill: #fff;
}

.new-project__settings__label {
  text-transform: none;
  color: #0D2C54;
}

.new-project__settings__label:first-of-type {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: none;
}

.new-project__settings__label:last-of-type {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: none;
}

.new-project__settings__icon {
  margin-right: 1rem;
  fill: none;
  stroke: #0D2C54;
}

.new-project__settings__icon--fill {
  fill: #0D2C54;
}

.new-project__settings__notice {
  margin-top: 1rem !important;
  font-style: italic;
  font-size: 1.3rem;
  color: #85929F;
}

.new-project__submit {
  margin: auto;
}

@media (min-width: 48em) {
  .new-project__main, .new-project__header {
    padding: 6rem 15.5% 5rem;
  }
  .new-project__close {
    top: 3rem;
    right: 3rem;
  }
}

.user-list {
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 2rem;
}

.user-list--centered {
  -ms-flex-pack: center;
      justify-content: center;
}

.user-list--modal-margin {
  margin: 1rem 0;
}

.user-list--large .user-list__link {
  width: 3rem;
  height: 3rem;
}

.user-list__item {
  margin-right: .6rem;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.user-list__item:hover:before {
  font-size: 1.2rem;
  background-color: rgba(4, 22, 46, 0.9);
  content: attr(data-name);
  position: absolute;
  top: -40px;
  left: 50%;
  -ms-transform: translateX(-50%);
      transform: translateX(-50%);
  padding: .6rem 1rem;
  white-space: nowrap;
  border-radius: .3rem;
  color: #fff;
  z-index: 1;
  line-height: 1.6666;
  font-weight: 400;
}

.user-list__item:hover:after {
  content: '';
  position: absolute;
  right: 1.25rem;
  top: -9px;
  left: 6.5px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: rgba(4, 22, 46, 0.9) transparent transparent transparent;
}

.user-list__item--add {
  color: #B6CCCC;
  transition: all .3s;
  border: 0.1rem dashed #B6CCCC;
  border-radius: 50%;
}

.user-list__item--add:before, .user-list__item--add:after {
  display: none;
}

.user-list__item--add:hover {
  border-style: solid;
  border-color: #06B2DD;
  background-color: #06B2DD;
}

.user-list__item--add:hover .user-list__plus {
  stroke: #fff;
}

.user-list__item--more:before, .user-list__item--more:after {
  display: none;
}

.user-list__item--more .user-list__link {
  width: auto;
  height: auto;
  font-size: 1.2rem;
  text-decoration: underline;
  margin-left: .6rem;
}

.user-list__item--more .user-list__link:hover + ul {
  display: block;
}

.user-list__img {
  border-radius: 50%;
  width: 100%;
}

.user-list__hover {
  display: none;
  position: absolute;
  top: -1rem;
  -ms-transform: translateY(-100%);
      transform: translateY(-100%);
  left: 50%;
  -ms-transform: translate(-50%, -100%);
      transform: translate(-50%, -100%);
  font-size: 1.2rem;
  background-color: rgba(4, 22, 46, 0.9);
  padding: .6rem 1rem;
  white-space: nowrap;
  border-radius: .3rem;
  color: #fff;
  z-index: 1;
}

.user-list__hover:after {
  content: '';
  position: absolute;
  bottom: -7px;
  left: 50%;
  -ms-transform: translateY(-50%);
      transform: translateY(-50%);
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: rgba(4, 22, 46, 0.9) transparent transparent transparent;
}

.user-list__link {
  width: 2.4rem;
  height: 2.4rem;
  border-radius: 50%;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  position: relative;
}

.user-list__link--empty {
  text-align: center;
  background-color: #fff;
  font-size: 1rem;
  color: #06408E;
  font-weight: 500;
  line-height: 2.4rem;
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);
}

.user-list__link--addable:hover:before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  top: 0;
  left: 0;
  background-image: url(../img/plus-add-user-popup.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-color: rgba(13, 44, 84, 0.5);
}

.user-list__link--added:before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-image: url(../img/check-user.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-color: rgba(104, 223, 11, 0.7);
}

.user-list__link--added:hover:before {
  background-image: url(../img/plus-add-user-popup.svg);
  background-color: rgba(13, 44, 84, 0.5);
  -ms-transform: rotate(45deg);
      transform: rotate(45deg);
}

.user-list__plus {
  stroke: #06B2DD;
}

.modal-general {
  background-color: #fff;
  border-radius: .3rem;
  padding: 10rem 3rem;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 50rem;
  max-width: 100%;
}

.modal-general--shadow {
  box-shadow: 0 30px 40px 0 rgba(6, 21, 41, 0.12);
  margin-bottom: 5rem;
}

.modal-general__close {
  display: block;
  position: absolute;
  top: 2.5rem;
  right: 2.5rem;
  width: 2rem;
  height: 2rem;
  text-indent: -9999px;
  background-image: url(../img/close-popup-dark.svg);
  background-size: cover;
}

.modal-general__heading {
  font-size: 3rem;
  font-weight: 300;
  color: #0D2C54;
  text-align: center;
  margin-bottom: .25em;
}

@media (min-width: 20em) {
  .modal-general__heading {
    font-size: calc(1.13636vw + 2.63636rem);
    font-size: -webkit-calc(1.13636vw + 2.63636rem);
  }
}

@media (min-width: 75em) {
  .modal-general__heading {
    font-size: 4rem;
  }
}

.modal-general__heading--mb {
  margin-bottom: 1em;
}

.modal-general__heading--light {
  font-weight: 100;
}

.modal-general__subheading {
  text-transform: uppercase;
  font-size: 1.3rem;
  color: #85929F;
  letter-spacing: .1em;
  text-align: center;
}

.modal-general__link {
  display: block;
  text-align: center;
  font-size: 1.3rem;
  color: #06B2DD;
  text-decoration: underline;
}

.modal-general__text-wrap {
  color: #85929F;
  max-width: 40rem;
  margin: auto;
  text-align: center;
}

.modal-general__btn-wrap {
  margin-top: 4rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
}

.modal-general__input-wrap {
  margin-top: 3.6rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
}

.modal-general__btn:not(:last-child) {
  margin-right: 1rem;
}

.context-menu {
  padding: 3rem;
  width: 24.5rem;
  background-color: #fff;
  box-shadow: 0 30px 40px 0 rgba(6, 21, 41, 0.12);
  border-radius: .3rem;
}

.context-menu__link {
  color: #0D2C54;
  display: block;
  transition: color .3s;
}

.context-menu__link:hover {
  color: #06B2DD;
}

.context-menu__item:not(:last-child) {
  margin-bottom: .5rem;
}

.notifications {
  background-color: #fff;
  box-shadow: 0 30px 40px 0 rgba(6, 21, 41, 0.12);
  padding: 3rem;
}

.notifications__item {
  padding: 1.2rem 0;
}

.notifications__item:first-child {
  padding-top: 0;
}

.notifications__item:last-child {
  padding-bottom: 0;
}

.notifications__item:not(:last-child) {
  border-bottom: 0.1rem solid #EDEDED;
}

.notifications__top {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  margin-bottom: .9rem;
}

.notifications__date {
  font-size: 1.2rem;
  color: #B6CCCC;
}

.notifications__project {
  font-size: 1.2rem;
  color: #85929F;
  text-align: right;
}

.notifications__img {
  width: 1.6rem;
  height: 1.6rem;
  border-radius: 50%;
  margin-right: .6rem;
}

.notifications__body {
  display: -ms-flexbox;
  display: flex;
}

.notifications__text {
  font-size: 1.3rem;
  line-height: 1.23;
  padding-top: .1rem;
  margin-right: 2rem;
}

.notifications__btns {
  display: -ms-flexbox;
  display: flex;
}

.notifications__btn:first-child {
  margin-right: .6rem;
}

.notifications__link {
  text-decoration: underline;
}

.notifications__link:hover {
  text-decoration: none;
}

.notifications__bottom-btn {
  margin-top: 3rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
}

.modal-tabbed {
  width: 80rem;
  border-radius: .3rem;
}

.modal-tabbed__header {
  padding: 0 1.5rem;
  background-image: linear-gradient(-225deg, #06408E 0%, #1C78BF 100%);
  position: relative;
}

.modal-tabbed__close {
  display: block;
  position: absolute;
  top: 2.7rem;
  right: 2.5rem;
  width: 2rem;
  height: 2rem;
  text-indent: -9999px;
  background-image: url(../img/close-popup.svg);
  background-size: cover;
}

.modal-tabbed__btn {
  font-size: 1.3rem;
  color: rgba(255, 255, 255, 0.8);
  height: 7.5rem;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-align: center;
      align-items: center;
  cursor: pointer;
}

.modal-tabbed__btn:not(:last-child) {
  margin-right: 2.5rem;
}

.modal-tabbed__btn[aria-selected='true'] {
  font-weight: 500;
  border-bottom: 0.3rem solid #06B2DD;
}

.modal-tabbed__ico {
  display: none;
  margin-right: 1rem;
}

.modal-tabbed__tab {
  display: none;
  background-color: #fff;
  padding: 4rem 2rem;
}

.modal-tabbed__tab[aria-hidden='false'] {
  display: block;
}

@media (min-width: 35.5em) {
  .modal-tabbed__ico {
    display: block;
  }
}

@media (min-width: 48em) {
  .modal-tabbed__header {
    padding: 0 3rem;
  }
  .modal-tabbed__tab {
    padding: 4rem;
  }
  .modal-tabbed__btn {
    font-size: 1.6rem;
  }
  .modal-tabbed__btn:not(:last-child) {
    margin-right: 4.5rem;
  }
}

.restore-tasks__notice {
  text-align: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  margin-bottom: 3.5rem;
  font-style: italic;
  font-size: 1.3rem;
  color: #85929F;
}

.restore-tasks__notice__icon {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  border: 0.1rem solid #B6CCCC;
  border-radius: 50%;
  width: 2rem;
  min-width: 2rem;
  height: 2rem;
  min-height: 2rem;
  margin-right: 1rem;
}

.restore-tasks__task {
  padding: 1.6rem 0;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 0.1rem solid #EDEDED;
}

.restore-tasks__task:first-child {
  padding-top: 0;
}

.restore-tasks__title {
  font-size: 1.4rem;
  font-weight: 500;
  margin: 0;
  margin-bottom: .25em;
}

.restore-tasks__description {
  font-size: 1.2rem;
  color: #85929F;
}

.restore-tasks__img {
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  margin-right: 1rem;
}

.restore-tasks__img--no-user {
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
}

.restore-tasks__img--no-user img {
  max-width: 1.5rem;
  margin: 0;
}

.restore-tasks__btns {
  margin-left: auto;
}

.restore-tasks__text {
  padding-right: 1rem;
}

.general-settings {
  text-align: center;
}

.general-settings__inputs {
  text-align: left;
  margin-bottom: 5rem;
}

.general-settings__label {
  text-align: left;
}

.general-settings__input {
  text-align: left !important;
  color: #0D2C54 !important;
  border-color: #B6CCCC !important;
  font-family: .general-settings__input --lg;
  font-family-font-weight: 500 !important;
  font-family-font-size: 2rem !important;
}

.general-settings__input::-webkit-input-placeholder {
  text-align: left !important;
}

.general-settings__input:-moz-placeholder {
  text-align: left !important;
}

.general-settings__input::-moz-placeholder {
  text-align: left !important;
}

.general-settings__input:-ms-input-placeholder {
  text-align: left !important;
}

.general-settings__input-wrap:not(:last-child) {
  margin-bottom: 3rem;
}

.general-settings__card {
  position: relative;
  min-height: 12rem;
  font-size: 1.4rem;
}

.general-settings__card__text {
  position: relative;
  color: #fff;
}

.general-settings__card--bg {
  background-image: linear-gradient(-225deg, #06408E 0%, #1C78BF 100%);
}

.general-settings__picker {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-top: 2rem;
  margin-bottom: 1.5rem;
  -ms-flex-align: center;
      align-items: center;
}

.general-settings__picker__notice {
  font-size: 1.2rem;
  font-weight: 500;
  margin-right: 2rem;
  white-space: nowrap;
}

.general-settings__picker__desc {
  text-align: left;
}

.general-settings__picker__list {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  padding: .5rem 0;
}

.general-settings__picker__item {
  display: inline-block;
  margin-right: 1rem;
  width: 1.8rem;
  height: 1.8rem;
}

.general-settings__picker__input:checked + .general-settings__picker__label {
  -ms-transform: scale(1.2);
      transform: scale(1.2);
}

.general-settings__picker__input:checked + .general-settings__picker__label:before {
  content: '';
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-image: url(../img/check-user.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 9px;
}

.general-settings__picker__label {
  position: relative;
  display: inline-block;
  left: 0;
  width: 1.8rem;
  height: 1.8rem;
  border-radius: 50%;
  cursor: pointer;
  transition: all .3s;
}

.general-settings__picker__label--red {
  background-color: #F53A53;
}

.general-settings__picker__label--orange {
  background-color: #F49700;
}

.general-settings__picker__label--yellow {
  background-color: #F3EA00;
}

.general-settings__picker__label--green {
  background-color: #68DE0C;
}

.general-settings__picker__label--cyan {
  background-color: #17E7A6;
}

.general-settings__picker__label--azure {
  background-color: #19C3EE;
}

.general-settings__picker__label--blue {
  background-color: #2259D9;
}

.general-settings__picker__label--purple {
  background-color: #D300D8;
}

.general-settings__picker__label:hover {
  opacity: .5;
}

@media (min-width: 35.5em) {
  .general-settings__inputs, .general-settings__colours {
    width: calc(99.9% * 1/2 - (30px - 30px * 1/2));
  }
  .general-settings__inputs:nth-child(1n), .general-settings__colours:nth-child(1n) {
    float: left;
    margin-right: 30px;
    clear: none;
  }
  .general-settings__inputs:last-child, .general-settings__colours:last-child {
    margin-right: 0;
  }
  .general-settings__inputs:nth-child(2n), .general-settings__colours:nth-child(2n) {
    margin-right: 0;
    float: right;
  }
  .general-settings__inputs:nth-child(2n + 1), .general-settings__colours:nth-child(2n + 1) {
    clear: both;
  }
  .general-settings__picker__desc {
    text-align: center;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
